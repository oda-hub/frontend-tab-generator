{% macro filters_file_req(filters_csv_name) -%}
$module_name = basename(__FILE__, '.install');
$current_dir = drupal_get_path('module', $module_name);
$filters = array();
if (_mmoda_euclid_read_filters_file($current_dir . '/{{ filters_csv_name }}', $filters))
  $requirements[$module_name] = array(
    'title' => t('A valid Euclid filters CSV file'),
    'description' => t('The Euclid filters file euclid-filters.csv must be present in the module root directory and it must be valid.'),
    'severity' => REQUIREMENT_ERROR
  );
{%- endmacro -%}

{% macro install_filters(euclid_csv_name_list, euclid_table_parname_list, euclid_product_name_list) -%}
  $module_name = basename(__FILE__, '.install');
  $current_dir = drupal_get_path('module', $module_name);
  {% for filters_csv_name in euclid_csv_name_list %}
    $filters = array();
    _mmoda_euclid_read_filters_file($current_dir . '/{{ filters_csv_name }}', $filters);
    unset($filters['Instrument']);
    $module_settings['{{ euclid_table_parname_list[loop.index0] }}_{{ euclid_product_name_list[loop.index0] }}']=$filters;
  {% endfor %}
{%- endmacro -%}

{% macro read_filters_func() -%}
function _mmoda_euclid_read_filters_file($filename, &$filters)
{
  if (! $f = fopen($filename, "r")) {
    $error_message = 'Error, can not read Euclid filters file :' . $filename;
    error_log($error_message);
    watchdog('MMODA_EUCLID', $error_message);
    return (1);
  }
  // read file line by line until the end of file (feof)
  $i = 1;
  while (! feof($f)) {
    $values = fgetcsv($f);
    if ($values !== false and count($values) == 2) {
      if (! array_key_exists($values[0], $filters))
        $filters[$values[0]] = array();
      array_push($filters[$values[0]], $values[1]);
    }
    elseif ($values === false and !feof($f)) {
      $error_message = "Error, bad CSV file, line $i :" . $filename;
      error_log($error_message);
      watchdog('MMODA_EUCLID', $error_message);
      return (1);
    }
    $i ++;
  }
  fclose($f);
  return (0);
}
{%- endmacro -%}


{# TODO: prefix-suffix, visibility etc #}
{% macro euclid_form_field(filters_par_name, par_detail) -%}

$instruments_filters = array();
foreach ($instrument_defaults['{{ filters_par_name }}'] as $instrument => $filters) {
  if (! array_key_exists($instrument, $instruments_filters))
    $instruments_filters[$instrument] = array();
  foreach ($filters as $filter) {
    $instruments_filters[$instrument][$instrument . '|' . $filter] = $filter;
  }
}
{% for product_name in par_detail.products %}
  {% if 'extra_metadata' in par_detail and 'group' in par_detail['extra_metadata'] %}
  $form['{{ par_detail['extra_metadata']['group'] | snake_case }}']['{{ filters_par_name }}_{{ product_name }}'] = array(
  {% else %}
  $form['{{ filters_par_name }}_{{ product_name }}'] = array(
  {% endif %}
    '#type' => 'container',
    {% if 'products' in par_detail %}
    '#states' => array(
      'visible' => array(
        ':input[name="' . $mform_id . 'product_type"]' => array(array('value' => '{{ product_name }}')),
      ),
      'enabled' => array(
        ':input[name="' . $mform_id . 'product_type"]' => array(array('value' => '{{ product_name }}')),
      )
    ),
  {% endif %}
    '#attributes' => array(
      'class' => array(
        'euclid-instruments-filters',
         'multivalued-field',
         'col-md-12'
      ),
      'multivalued_field_param_name' => '{{ filters_par_name }}'
    ),
    '#suffix' => {% if 'extra_metadata' not in par_detail or 'group' not in par_detail['extra_metadata'] %}'<hr>'{% else %}''{% endif %}
  );

  {% if 'extra_metadata' in par_detail and 'group' in par_detail['extra_metadata'] %}
  $form['{{ par_detail['extra_metadata']['group'] | snake_case }}']['{{ filters_par_name }}_{{ product_name }}']['{{ filters_par_name }}_{{ product_name }}[filter][]'] = array(
  {% else %}
  $form['{{ filters_par_name }}_{{ product_name }}']['{{ filters_par_name }}_{{ product_name }}[filter][]'] = array(
  {% endif %}
    '#type' => 'select',
    '#title' => t('Filter'),
    '#required' => TRUE,
    '#options' => $instruments_filters,
    '#parent_classes' => array(
      'col-md-4',
      'instrument-filters'
    ),
    # TODO not clear why, but by removing the label tag, the labels of the filters drop-down menus disappear
    '#prefix' => '<label></label>' .'<div class="row form-group multivalued-value">'
  );
  {% if 'extra_metadata' in par_detail and 'group' in par_detail['extra_metadata'] %}
  $form['{{ par_detail['extra_metadata']['group'] | snake_case }}']['{{ filters_par_name }}_{{ product_name }}']['{{ filters_par_name }}_{{ product_name }}[flux][]'] = array(
  {% else %}
  $form['{{ filters_par_name }}_{{ product_name }}']['{{ filters_par_name }}_{{ product_name }}[flux][]'] = array(
  {% endif %}
    '#type' => 'textfield',
    '#title' => t('Flux/Mag column'),
    '#required' => TRUE,
    '#options' => array(),
    '#parent_classes' => array(
      'col-md-3 '
    )
  );
  {% if 'extra_metadata' in par_detail and 'group' in par_detail['extra_metadata'] %}
  $form['{{ par_detail['extra_metadata']['group'] | snake_case }}']['{{ filters_par_name }}_{{ product_name }}']['{{ filters_par_name }}_{{ product_name }}[flux_error][]'] = array(
  {% else %}
  $form['{{ filters_par_name }}_{{ product_name }}']['{{ filters_par_name }}_{{ product_name }}[flux_error][]'] = array(
  {% endif %}
    '#type' => 'textfield',
    '#title' => t('Flux/Mag error column'),
    '#required' => TRUE,
    '#options' => array(),
    '#parent_classes' => array(
      'col-md-3'
    ),
    '#suffix' => '</div>'
  );

  drupal_add_js(array(
      'euclid-filters_{{ product_name }}' => $instrument_defaults['{{ filters_par_name }}']
    ), 'setting');
{% endfor %}
{%- endmacro -%}