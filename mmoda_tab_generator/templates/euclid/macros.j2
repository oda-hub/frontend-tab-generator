{% macro filters_file_req(filters_csv_name) -%}
$module_name = basename(__FILE__, '.install');
$current_dir = drupal_get_path('module', $module_name);
$filters = array();
if (_mmoda_euclid_read_filters_file($current_dir . '/{{ filters_csv_name }}', $filters))
  $requirements[$module_name] = array(
    'title' => t('A valid Euclid filters CSV file'),
    'description' => t('The Euclid filters file euclid-filters.csv must be present in the module root directory and it must be valid.'),
    'severity' => REQUIREMENT_ERROR
  );
{%- endmacro -%}

{% macro install_filters(filters_csv_name, filters_par_name) -%}
$module_name = basename(__FILE__, '.install');
$current_dir = drupal_get_path('module', $module_name);
$filters = array();
_mmoda_euclid_read_filters_file($current_dir . '/{{ filters_csv_name }}', $filters);
unset($filters['Instrument']);
$module_settings['{{ filters_par_name }}']=$filters;
{%- endmacro -%}

{% macro read_filters_func() -%}
function _mmoda_euclid_read_filters_file($filename, &$filters)
{
  if (! $f = fopen($filename, "r")) {
    $error_message = 'Error, can not read Euclid filters file :' . $filename;
    error_log($error_message);
    watchdog('MMODA_EUCLID', $error_message);
    return (1);
  }
  // read file line by line until the end of file (feof)
  $i = 1;
  while (! feof($f)) {
    $values = fgetcsv($f);
    if ($values !== false and count($values) == 2) {
      if (! array_key_exists($values[0], $filters))
        $filters[$values[0]] = array();
      array_push($filters[$values[0]], $values[1]);
    }
    elseif ($values === false and !feof($f)) {
      $error_message = "Error, bad CSV file, line $i :" . $filename;
      error_log($error_message);
      watchdog('MMODA_EUCLID', $error_message);
      return (1);
    }
    $i ++;
  }
  fclose($f);
  return (0);
}
{%- endmacro -%}


{# TODO: prefix-suffix, visibility etc #}
{% macro euclid_form_field(filters_par_name, par_detail) -%}

drupal_add_js(drupal_get_path('module', 'mmoda_photoz_euclid') . '/js/fits-reader/dist/fits-reader/fits-reader.js');
drupal_add_js(drupal_get_path('module', 'mmoda_photoz_euclid') . '/js/mmoda_euclid.js');

$instruments_filters = array();
foreach ($instrument_defaults['{{ filters_par_name }}'] as $instrument => $filters) {
  if (! array_key_exists($instrument, $instruments_filters))
    $instruments_filters[$instrument] = array();
  foreach ($filters as $filter) {
    $instruments_filters[$instrument][$instrument . '|' . $filter] = $filter;
  }
}
{#
    $form['{{ filters_par_name }}_fits_type'] = array(
        '#type' => 'radios',
        '#title' => {% if 'extra_metadata' in par_detail and 'label' in par_detail['extra_metadata'] %}t("{{ par_detail['extra_metadata']['label'] }}"){% else %}t('{{ filters_par_name }} fits file'){% endif %},
        '#options' => array(
            'file' => t('Upload a file'),
            'url' => t('Provide a URL')
        ),
        '#default_value' => 'file',
        '#parent_classes' => array(
          'form-group',
          'col-md-8'
        ),
        '#attributes' => array(
          'name' => $mform_id . '{{ filters_par_name }}_fits_type',
        ),
        '#prefix' => '<div class="row">',
        '#suffix' => '</div>'
    );

    $form['{{ filters_par_name }}_fits_file'] = array(
      '#type' => 'file',
      '#title' => t('Upload a fits file',),
      '#description' => t('Upload a fits file'),
      '#states' => array(
          'visible' => array(
                ':input[name="' . $mform_id . '{{ filters_par_name }}_fits_type"]' => array(
                  array('value' => 'file')
                )
            ),
            'enabled' => array(
                ':input[name="' . $mform_id . '{{ filters_par_name }}_fits_type"]' => array(
                  array('value' => 'file')
                )
            )
      ),
      '#attributes' => array(
        'name' => $mform_id . '{{ filters_par_name }}_fits_file'
      ),
      '#parent_classes' => array(
        'euclid-instruments-filters fits-file-container'
      ),
    );

    $form['{{ filters_par_name }}_fits_url'] = array(
      '#type' => 'textfield',
      '#title' => t('Fits file URL',) . '<span class="reload-fits-file-button glyphicon glyphicon-refresh"></span>' ,
      '#description' => t('Provide the url of the fits file'),
      '#states' => array(
          'visible' => array(
                ':input[name="' . $mform_id . '{{ filters_par_name }}_fits_type"]' => array(
                  array('value' => 'url')
                )
            ),
            'enabled' => array(
                ':input[name="' . $mform_id . '{{ filters_par_name }}_fits_type"]' => array(
                  array('value' => 'url')
                )
            )
      ),
      '#attributes' => array(
        'name' => $mform_id . '{{ filters_par_name }}_fits_url'
      ),
      '#parent_classes' => array(
        'euclid-instruments-filters fits-file-container'
      ),
    );
#}
    {% if 'extra_metadata' in par_detail and 'group' in par_detail['extra_metadata'] %}
    $form['{{ par_detail['extra_metadata']['group'] | snake_case }}']['{{ filters_par_name }}_fits'] = array(
    {% else %}
    $form['{{ filters_par_name }}_fits'] = array(
    {% endif %}
      '#type' => 'container',
      '#title' => t('Filters from fits file'),
      '#states' => array(
          'visible' => array(
                ':input[name="' . $mform_id . '{{ filters_par_name }}_fits_type"]' => array(
                  array('value' => 'file'), 'or', array('value' => 'url')
                )
            ),
            'enabled' => array(
                ':input[name="' . $mform_id . '{{ filters_par_name }}_fits_type"]' => array(
                  array('value' => 'url'), 'or', array('value' => 'file')
                )
            )
      ),
      '#attributes' => array(
        'class' => array(
          'euclid-instruments-filters',
           'multivalued-field',
           'col-md-12'
        )
      ),
      '#suffix' => {% if 'extra_metadata' not in par_detail or 'group' not in par_detail['extra_metadata'] %}'<hr>'{% else %}''{% endif %}
    );

    {% if 'extra_metadata' in par_detail and 'group' in par_detail['extra_metadata'] %}
    $form['{{ par_detail['extra_metadata']['group'] | snake_case }}']['{{ filters_par_name }}_fits']['{{ filters_par_name }}_fits[filter][]'] = array(
    {% else %}
    $form['{{ filters_par_name }}_fits']['{{ filters_par_name }}_fits[filter][]'] = array(
    {% endif %}
      '#type' => 'select',
      '#title' => t('Filter'),
      '#required' => TRUE,
      '#options' => $instruments_filters,
      '#parent_classes' => array(
        'col-md-4',
        'instrument-filters'
      ),
      # TODO not clear why, but by removing the label tag, the labels of the filters drop-down menus disappear
      '#prefix' => '<label class="control-label"></label>' . '<div class="row form-group multivalued-value">'
    );
    {% if 'extra_metadata' in par_detail and 'group' in par_detail['extra_metadata'] %}
    $form['{{ par_detail['extra_metadata']['group'] | snake_case }}']['{{ filters_par_name }}_fits']['{{ filters_par_name }}_fits[flux][]'] = array(
    {% else %}
    $form['{{ filters_par_name }}_fits']['{{ filters_par_name }}_fits[flux][]'] = array(
    {% endif %}
      '#type' => 'select',
      '#title' => t('Flux column name'),
      '#required' => TRUE,
      '#options' => array(),
      '#parent_classes' => array(
        'col-md-3 '
      )
    );
    {% if 'extra_metadata' in par_detail and 'group' in par_detail['extra_metadata'] %}
    $form['{{ par_detail['extra_metadata']['group'] | snake_case }}']['{{ filters_par_name }}_fits']['{{ filters_par_name }}_fits[flux_error][]'] = array(
    {% else %}
    $form['{{ filters_par_name }}_fits']['{{ filters_par_name }}_fits[flux_error][]'] = array(
    {% endif %}
      '#type' => 'select',
      '#title' => t('Flux error column name'),
      '#required' => TRUE,
      '#options' => array(),
      '#parent_classes' => array(
        'col-md-3'
      ),
      '#suffix' => '</div>'
    );

    drupal_add_js(array(
        'euclid-filters' => $instrument_defaults['{{ filters_par_name }}']
      ), 'setting');

{%- endmacro -%}